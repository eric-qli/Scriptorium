// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  firstname   String
  lastname    String
  email       String    @unique
  password    String
  avatar      String?
  phonenumber String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  // Relations
  codeTemplates CodeTemplate[]
  blogPosts     BlogPost[]
  comments      Comment[]
  reports       Report[]
}

model CodeTemplate {
  id          Int       @id @default(autoincrement())
  title       String
  explanation String
  tags        String
  code        String
  language    String
  isForked    Boolean   @default(false)
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  // Relations
  blogPosts   BlogPost[]
}

model BlogPost {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  tags        String
  author      User         @relation(fields: [authorId], references: [id])
  authorId    Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  // Relations
  codeTemplates CodeTemplate[]
  comments      Comment[]
}

model Comment {
  id              Int       @id @default(autoincrement())
  content         String
  author          User      @relation(fields: [authorId], references: [id])
  authorId        Int
  blogPost        BlogPost  @relation(fields: [blogPostId], references: [id])
  blogPostId      Int
  parentComment   Comment?  @relation("CommentReplies", fields: [parentCommentId], references: [id])
  parentCommentId Int?
  replies         Comment[] @relation("CommentReplies")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Report{
  id              Int       @id @default(autoincrement())
  reason          String
  explanation     String
  reporterId      Int
  ContentId       Int      
  createdAt       DateTime  @default(now())

  user            User[]
}